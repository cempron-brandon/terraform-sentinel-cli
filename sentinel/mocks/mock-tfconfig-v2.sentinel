import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "~> 3.0",
	},
	"random": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/random",
		"module_address":      "",
		"name":                "random",
		"provider_config_key": "random",
		"version_constraint":  "",
	},
}

resources = {
	"aws_s3_bucket.dev": {
		"address": "aws_s3_bucket.dev",
		"config": {
			"bucket": {
				"references": [
					"random_pet.petname.id",
					"random_pet.petname",
				],
			},
			"force_destroy": {
				"constant_value": true,
			},
			"policy": {
				"references": [
					"random_pet.petname.id",
					"random_pet.petname",
				],
			},
			"tags": {
				"constant_value": {
					"environment": "dev",
				},
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "dev",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
	"aws_s3_bucket_acl.dev": {
		"address": "aws_s3_bucket_acl.dev",
		"config": {
			"acl": {
				"constant_value": "public-read",
			},
			"bucket": {
				"references": [
					"aws_s3_bucket.dev.id",
					"aws_s3_bucket.dev",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "dev",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_acl",
	},
	"random_pet.petname": {
		"address": "random_pet.petname",
		"config": {
			"length": {
				"constant_value": 4,
			},
			"separator": {
				"constant_value": "-",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "petname",
		"provider_config_key": "random",
		"provisioners":        [],
		"type":                "random_pet",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
